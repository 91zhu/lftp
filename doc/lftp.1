.\"
.\" lftp.1 - Sophisticated ftp program
.\"
.\" This file is part of lftp.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License , or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; see the file COPYING.  If not, write to
.\" the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\" $Id$
.\"
.\"-------
.\" Sp  space down the interparagraph distance
.\"-------
.de Sp
.sp \\n(Ddu
..
.\"-------
.\" Ds  begin a display, indented .5 inches from the surrounding text.
.\"
.\" Note that uses of Ds and De may NOT be nested.
.\"-------
.de Ds
.Sp
.in +0.5i
.nf
..
.\"-------
.\" De  end a display (no trailing vertical spacing)
.\"-------
.de De
.fi
.in
..
.TH lftp 1 "19 Apr 2000"
.SH NAME
lftp \- Sophisticated file transfer program
.SH SYNTAX
.B lftp
[\fB\-d\fR] [\fB\-e \fIcmd\fR] [\fB\-p \fIport\fR]
[\fB\-u \fIuser\fR[\fB,\fIpass\fR]] [\fIsite\fR]
.br
.BI "lftp \-f " script_file
.br
.BI "lftp \-c " commands
.br
.B lftp \-\-version
.br
.B lftp \-\-help

.SH VERSION
This man page documents lftp version 2.2.1.

.SH "DESCRIPTION"
\fBlftp\fR is a program that allows sophisticated ftp and http connections to
other hosts. If \fIhost\fR is specified then lftp will connect to that
host otherwise a connection has to be established with the open
command.
.PP
\fBlftp\fP can handle four file access methods - ftp, http, hftp and file. You
can specify the method to use in ``open URL'' command, e.g. ``open
http://www.us.kernel.org/pub/linux''. hftp is ftp-over-http-proxy protocol.
.PP
Every operation in \fBlftp\fP is reliable, that is any not fatal error is
ignored and the operation is repeated. So if downloading breaks, it
will be restarted from the point automatically. Even if ftp server
does not support REST command, \fBlftp\fP will try to retrieve the file from
the very beginning until the file is transferred completely.

\fBlftp\fP has shell-like command syntax allowing you to launch several
commands in parallel in background (&). It is also possible to group
commands within () and execute them in background. All background jobs
are executed in the same single process. You can bring a foreground
job to background with ^Z (c-z) and back with command `wait' (or `fg' which
is alias to `wait'). To list running jobs, use command `jobs'. Some
commands allow redirecting their output (cat, ls, ...) to file or via
pipe to external command. Commands can be executed conditionally based
on termination status of previous command (&&, ||).
.PP
If you exit \fBlftp\fP when some jobs are not finished yet, \fBlftp\fP will move
itself to nohup mode in background. The same happens when you have a
real modem hangup or when you close an xterm.
.PP
\fBlftp\fP has builtin mirror which can download or update a whole directory
tree. There is also reverse mirror (mirror -R) which uploads or
updates a directory tree on server.
.PP
There is command `at' to launch a job at specified time in current
context, command `queue' to queue commands for sequential execution
for current server, and much more.
.PP
On startup, \fBlftp\fP executes \fI/etc/lftp.conf\fP and then \fI~/.lftprc\fP and
\fI~/.lftp/rc\fP. You can place aliases and `set' commands there. Some
people prefer to see full protocol debug, use `debug' to turn the
debug on. Use `debug 3' to see only greeting messages and error
messages.
.PP
\fBlftp\fP has a number of settable variables. You can use `set -a' to see
all variables and their values or `set -d' to see list of defaults.
Variable names can be abbreviated and prefix can be omitted unless the
rest becomes ambiguous.

.SS Commands
.PP

.BI ! " shell command"
.PP
Launch shell or shell command.
.PP
.Ds
!ls
.De
.PP
To do a directory listing of the local host.

.B alias
.RI " [" name " [" value ]]
.PP
Define or undefine alias \fIname\fP. If \fIvalue\fP is omitted, the alias is
undefined, else it takes the value \fIvalue\fP. If no argument is given
the current aliases are listed.
.PP
.Ds
alias dir ls -lF
alias less zmore
.De

.B anon
.PP
Sets the user to anonymous.  This is the default.

.BR at " \fItime\fP [ -- \fIcommand\fP ] "
.PP
Wait until the given time and execute given (optional) command. See also at(1).

.B bookmark
.RI " [" subcommand ]
.PP
The bookmark command controls bookmarks.
.Ds
  add <name> [<loc>] - add current place or given location
                       to bookmarks and bind to given name
  del <name>         - remove bookmark with name
  edit               - start editor on bookmarks file
  import <type>      - import foreign bookmarks
  list               - list bookmarks (default)
.De

.B cache
.RI " [" subcommand ]
.PP
The cache command controls local memory cache.
The following subcommands are recognized:
.Ds
  stat      - print cache status (default)
  on|off    - turn on/off caching
  flush     - flush cache
  size \fIlim\fP  - set memory limit, -1 means unlimited
  expire \fINx\fP - set cache expiration time to \fIN\fP seconds (\fIx\fP=s)
         minutes (\fIx\fP=m) hours (\fIx\fP=h) or days (\fIx\fP=d)
.De
.PP

.BR cat " \fIfiles\fP"
.PP
cat outputs the remote file(s) to stdout.  (See also \fBmore\fR,
\fBzcat\fR and \fBzmore\fR)

.BR cd " rdir"
.PP
Change current remote directory.  The previous remote directory is
stored as `-'. You can do `cd -' to change the directory back.
The previous directory for each site is also stored on disk,
so you can do `open site; cd -' even after lftp restart.

.BR chmod " \fImode files\fP"
.PP
Change permission mask on remote files. The mode must be an octal number.

.BR close " [" -a "]"
.PP
Close idle connections.  By default only with the current server, use
-a to close all idle connections.

.BR command " \fIcmd args...\fP
.PP
execute given command ignoring aliases.

.BR debug " [" -o
.IR file "] "  level "|\fBoff\fP"
.PP
Switch debugging to \fIlevel\fP or turn it off.  Use -o to redirect
the debug output to a file.

.BR echo " [" -n "] \fIstring\fR"
.PP
guess what it does.

.BR exit " code"
.PP
exit will exit from lftp or move to background if jobs are active.  If
no jobs are active, \fIcode\fP is passed to operating system as lftp's
termination status. If \fIcode\fP is omitted, the exit code of last
command is used.

.B fg
.PP
Alias for `wait'.

.B find
.RI " [" directory "] "
.PP
List files in the directory (current directory by default) recursively.
This can help with servers lacking ls -R support. You can redirect output
of this command.

.BR ftpcopy
.PP
Obsolete. Use one of the following instead:
.Ds
get ftp://... -o ftp://...
get -O ftp://... file1 file2...
put ftp://...
mput ftp://.../*
mget -O ftp://... ftp://.../*
.De
or other combinations.

.BR get " [" -E ]
.RB [ -a "] [" -c "] [" -O
.RB "\fIbase\fP] \fIrfile\fP [" -o " \fIlfile\fP] ..."
.PP
Retrieve the remote file \fIrfile\fP and store it as the local file
\fIlfile\fP.  If -o is omitted, the file is stored to local file named as
base name of \fIrfile\fP. You can get multiple files by specifying multiple
instances of \fIrfile\fP [and -o \fIlfile\fP]. Does not expand wildcards, use
\fBmget\fR for that.
.Ds
 -c  continue, reget
 -E  delete remote files after successful transfer
 -a  use ascii mode (binary is the default)
 -O <base> specifies base directory or URL where files should be placed
.De
.PP
Examples:
.Ds
get README
get README -o debian.README
get README README.mirrors
get README -o debian.README README.mirrors -o debian.mirrors
.De

.BR glob " [" -d "] [" -a "]"
.RB "[" -f "] \fIcommand patterns\fP"
.PP
Glob given patterns containing metacharacters and pass result to given command.
E.g. ``glob echo *''.
.Ds
 -f  plain files (default)
 -d  directories
 -a  all types
.De

.B help
[\fIcmd\fP]
.PP
Print help for \fIcmd\fP or if no \fIcmd\fP was specified print a list of
available commands.

.B jobs
.RB [ -v ]
.PP
List running jobs. -v means verbose, several -v can be specified.

.B kill
all|\fIjob_no\fP
.PP
Delete specified job with \fIjob_no\fP or all jobs.
(For \fIjob_no\fP see \fBjobs\fP)

.B lcd
\fIldir\fP
.PP
Change current local directory \fIldir\fP. The previous local
directory is stored as `-'. You can do `lcd -' to change the directory back.

.B lpwd
.PP
Print current working directory on local machine.

.B ls
\fIparams\fP
.PP
List remote files. You can redirect output of this command to file or
via pipe to external command.  By default, ls output is cached, to see
new listing use
.B rels
or
.B "cache flush."

.BR mget " [" -c "] [" -d "]"
.RB [ -a "] [" -E "]"
.RB [ -O " \fIbase\fP] \fIfiles\fP"
.PP
Gets selected files with expanded wildcards.
.PP
.Ds
 -c  continue, reget.
 -d  create directories the same as file names and get
     the files into them instead of current directory.
 -E  delete remote files after successful transfer
 -a  use ascii mode (binary is the default)
 -O <base> specifies base directory or URL where files should be placed
.De

.B mirror
.RI [ OPTS "] [" remote
.RI "[" local "]]"
.PP
Mirror specified remote directory to local directory.
.PP
.Ds
 -c, --continue         continue a mirror job if possible
 -e, --delete           delete files not present at remote site
 -s, --allow-suid       set suid/sgid bits according to remote site
 -n, --only-newer       download only newer files (-c won't work)
 -r, --no-recursion     don't go to subdirectories
 -p, --no-perms         don't set file permissions
     --no-umask         don't apply umask to file modes
 -R, --reverse          reverse mirror (put files)
 -L, --dereference      download symbolic links as files
 -N, --newer-than FILE  download only files newer than the file
 -i \fIRX\fP, --include \fIRX\fP    include matching files
 -x \fIRX\fP, --exclude \fIRX\fP    exclude matching files
 -t \fINx\fP, --time-prec \fINx\fP  set time precision to \fIN\fP seconds (\fIx\fP=s)
                        minutes (\fIx\fP=m) hours (\fIx\fP=h) or days (\fIx\fP=d)
                        default - mirror:time-precision setting
 -T \fINx\fP, --loose-time-prec  set time precision for imprecise time
                        default - mirror:loose-time-precision setting
 -v, --verbose[=level]  verbose operation
     --use-cache        use cached directory listings
.De
.PP
When using -R, the first directory is local and the second is remote.
If the second directory is omitted, base name of first directory is used.
If both directories are omitted, current local and remote directories are used.
.PP
\fIRX\fP is an extended regular expression, just like in
.BR egrep (1).
.PP
Note that when -R is used (reverse mirror), symbolic links are not created
on server, because ftp protocol cannot do it. To upload files the links refer
to, use `mirror -RL' command (treat symbolic links as files).
.PP
Verbosity level can be selected using \-\-verbose=level option or by several
\-v options, e.g. \-vvv. Levels are:
.Ds
 0 - no output (default)
 1 - print actions
 2 - +print not deleted file names (when -e is not specified)
 3 - +print directory names which are mirrored
.De
.PP
\-\-only\-newer turns off file size comparision and uploads/downloads
only newer files even if size is different. By default older files are downloaded/uploaded
if size is different.

.B mkdir
.RB "[" -p "] " \fIdir(s)\fP
.PP
Make remote directories. If -p is used, make all components of paths.

.B module
.IR "module " [ " args " ]
.PP
Load given module using dlopen(3) function. If module name does not contain
a slash, it is searched in PKGLIBDIR, usually
.IR /usr/lib/lftp " or " /usr/local/lib/lftp.
Arguments are passed to module_init function. See README.modules for technical
details.

.B more
\fIfiles\fP
.PP
Same as `cat \fIfiles\fP | more'. if \fBPAGER\fP is set, it is used as filter.
(See also \fBcat\fR, \fBzcat\fR and \fBzmore\fR)

.BR mput " [" -c "] [" -d "]"
.RB [ -a "] [" -E "]"
.RB [ -O " \fIbase\fP] \fIfiles\fP"
.PP
Upload files with wildcard expansion. By default it uses the base name of
local name as remote one. This can be changed by `-d' option.
.Ds
 -c  continue, reput
 -d  create directories the same as in file names and put the
     files into them instead of current directory
 -E  delete remote files after successful transfer (dangerous)
 -a  use ascii mode (binary is the default)
 -O <base> specifies base directory or URL where files should be placed
.De

.B mrm
\fIfile(s)\fP
.PP
Same as `glob rm'. Removes specified file(s) with wildcard expansion.

.B mv
\fIfile1\fP \fIfile2\fP
.PP
Rename \fIfile1\fP to \fIfile2\fP.

.B nlist
[\fIargs\fP]
.PP
List remote file names

.B open
.RB [ -e " \fIcmd\fP]"
.BR "[" -u " \fIuser\fP[", "\fIpass\fP]]"
.BR "[" -p " \fIport\fP] \fIhost\fP|\fIurl\fP"
.PP
Select an ftp server.

.B pget
.RI [ OPTS "] " rfile " [" "\fB-o\fP lfile"
.RI ]

Gets the specified file using several connections. This can speed up
transfer, but loads the net heavily impacting other users. Use only if
you really have to transfer the file ASAP, or some other user may go
mad :) Options:
.Ds
 -n \fImaxconn\fP  set maximum number of connections (default 5)
.De
.PP

.BR put " [" -E ]
.RB [ -a "] [" -c "]"
.RB "[" -O " \fIbase\fP] \fIlfile\fP [" -o \fIrfile\fP]
.PP
Upload \fIlfile\fP with remote name \fIrfile\fP. If -o omitted, the base name
of \fIlfile\fP is used as remote name. Does not expand wildcards, use \fBmput\fR for that.
.Ds
 -o <rfile> specifies remote file name (default - basename of lfile)
 -c  continue, reput
     it requires permission to overwrite remote files
 -E  delete local files after successful transfer (dangerous)
 -a  use ascii mode (binary is the default)
 -O <base> specifies base directory or URL where files should be placed
.De

.B pwd
.PP
Print current remote directory.

.B queue
\fIcmd\fP
.PP
Add the given command to queue for sequential execution. Each site has its own
queue. Don't try to queue `cd' or `lcd' commands, it may confuse lftp. Instead
do the cd/lcd before `queue' command, and it will remember the place in which
the command is to be done. It is possible to queue up an already running job
by `queue wait <jobno>', but the job will continue execution even if it is not
the first in queue.
.PP
.Ds
> get file &
[1] get file
> queue wait 1
> queue get another_file
> cd a_directory
> queue get yet_another_file
.De

.B quote
\fIcmd\fP
.PP
Send the command uninterpreted. Use with caution - it can lead to
unknown remote state and thus will cause reconnect. You cannot
be sure that any change of remote state because of quoted command
is solid - it can be reset by reconnect at any time.

.BR "reget \fIrfile\fP " [ -o " \fIlfile\fP]"
.PP
Same as `get -c'.

.B rels
[\fIargs\fP]
.PP
Same as `ls', but ignores the cache.

.B renlist
[\fIargs\fP]
.PP
Same as `nlist', but ignores the cache.

.BR repeat " [\fIdelay\fP] [\fIcommand\fP]"
.PP
Repeat the command. Between the commands a delay inserted, by default 1 second.
Example:
.Ds
repeat at tomorrow -- mirror
repeat 1d mirror
.De

.BR reput " \fIlfile\fP [" -o " \fIrfile\fP]"
.PP
Same as `put -c'.

.BR rm " [" -r "] [" -f ]
\fIfiles\fP
.PP
Remove remote files.  Does not expand wildcards, use \fBmrm\fR for
that. -r is for recursive directory remove. Be careful, if something goes
wrong you can lose files. -f supress error messages.

.B rmdir
\fIdir(s)\fP
.PP
Remove remote directories.

.B scache
[\fIsession\fP]
.PP
List cached sessions or switch to specified session.

.B set
[\fIvar\fP [\fIval\fP]]
.PP
Set variable to given value. If the value is omitted, unset the variable.
Variable name has format ``name/closure'', where closure can specify
exact application of the setting. See below for details.
If set is called with no variable then only altered settings are listed.
It can be changed by options:
.PP
.Ds
 -a  list all settings, including default values
 -d  list only default values, not necessary current ones
.De
.PP

.B site
\fIsite_cmd\fP
.PP
Execute site command \fIsite_cmd\fP and output the result.
You can redirect its output.

.BR sleep " \fIinterval\fP "
.PP
Sleep given time interval and exit. Interval is in seconds by default, but
can be suffixed with 'm', 'h', 'd' for minutes, hours and days respectively.
See also \fBat\fP.

.B source
\fIfile\fP
.PP
Execute commands recorded in file \fIfile\fP.

.B suspend
.PP
Stop lftp process. Note that transfers will be also stopped until you
continue the process with shell's fg or bg commands.

.B user
\fIuser\fP [\fIpass\fP]
.br
.B user
\fIURL\fP [\fIpass\fP]
.PP
Use specified info for remote login. If you specify an URL with user name,
the entered password will be cached so that futute URL references can use it.

.B version
.PP
Print \fBlftp\fR version.

.B wait
[\fIjobno\fP]
.PP
Wait for specified job to terminate. If jobno is omitted, wait for last
backgrounded job.

.B zcat
\fIfiles\fP
.PP
Same as cat, but filter each file through zcat. (See also \fBcat\fR,
\fBmore\fR and \fBzmore\fR)

.B zmore
\fIfiles\fP
.PP
Same as more, but filter each file through zcat. (See also \fBcat\fR,
\fBzcat\fR and \fBmore\fR)

.SS Settings
.PP
On startup, lftp executes
.IR "~/.lftprc " and " ~/.lftp/rc" "."
You can place aliases
and `set' commands there. Some people prefer to see full protocol
debug, use `debug' to turn the debug on.
.PP
There is also a system-wide startup file in
.IR /etc/lftp.conf .
It can be in different directory, see FILES section.
.PP
.B lftp
has the following settable variables (you can also use
`set -a' to see all variables and their values):
.TP
.BR bmk:save-passwords \ (bool)
save plain text passwords in ~/.lftp/bookmarks on `bookmark add' command.
Off by default.
.TP
.BR cmd:at-exit \ (string)
the commands in string are executed before lftp exits.
.TP
.BR cmd:csh-history \ (bool)
enables csh-like history expansion.
.TP
.BR cmd:default-protocol \ (string)
The value is used when `open' is used
with just host name without protocol. Default is `ftp'.
.TP
.BR cmd:fail-exit \ (bool)
if true, exit when an unconditional (without || and && at begin) command fails.
.TP
.BR cmd:long-running \ (seconds)
time of command execution, which is
considered as `long' and a beep is done before next prompt. 0
means off.
.TP
.BR cmd:ls-default \ (string)
default ls argument
.TP
.BR cmd:prompt \ (string)
The prompt. lftp recognizes the following backslash-escaped special
characters that are decoded as follows:

.RS
.PD 0
.TP
.B \e@
insert @ if current user is not default
.TP
.B \ea
an ASCII bell character (07)
.TP
.B \ee
an ASCII escape character (033)
.TP
.B \eh
the hostname you are connected to
.TP
.B \en
newline
.TP
.B \es
the name of the client (lftp)
.TP
.B \eu
the username of the user you are logged in as
.TP
.B \eU
the URL of the remote site (e.g., ftp://g437.ub.gu.se/home/james/src/lftp)
.TP
.B \ev
the version of \fBlftp\fP (e.g., 2.0.3)
.TP
.B \ew
the current working directory at the remote site
.TP
.B \eW
the base name of the current working directory at the remote site
.TP
.B \e\fInnn\fP
the character corresponding to the octal number \fInnn\fP
.TP
.B \e\e
a backslash
.TP
.B \e[
begin a sequence of non-printing characters, which could be used to
embed a terminal control sequence into the prompt
.TP
.B \e]
end a sequence of non-printing characters
.PD
.RE

.TP
.BR cmd:remote-completion \ (bool)
a boolean to control whether or not lftp uses remote completion.
.TP
.BR cmd:verify-host \ (bool)
if true, lftp resolves host name immediately in `open' command.
It is also possible to skip the check for a single `open' command if `&' is given,
or if ^Z is pressed during the check.
.TP
.BR cmd:verify-path \ (bool)
if true, lftp checks the path given in `cd' command.
It is also possible to skip the check for a single `cd' command if `&' is given,
or if ^Z is pressed during the check.
Examples:
.Ds
  set cmd:verify-path/hftp://* false
  cd directory &
.De
.TP
.BR dns:SRV-query \ (bool)
query for SRV records and use them before gethostbyname. The SRV records
are only used if port is not explicitly specified. See RFC2052 for details.
.TP
.BR dns:cache-enable \ (bool)
enable DNS cache. If it is off, lftp resolves host name each time it reconnects.
.TP
.BR dns:cache-expire " (time interval)"
time to live for DNS cache entries. It has format <number><unit>+, e.g.
1d12h30m5s or just 36h. To disable expiration, set it to `inf' or `never'.
.TP
.BR dns:cache-size \ (number)
maximum number of DNS cache entries.
.TP
.BR dns:fatal-timeout \ (seconds)
limit the time for DNS queries. If DNS server is unavailable too long, lftp
will fail to resolve a given host name. 0 means unlimited, the default.
.TP
.BR dns:order " (list of protocol names)"
sets the order of DNS queries. Default is ``inet inet6'' which means first
look up address in inet family, then inet6 and use first matched.
.TP
.BR dns:use-fork \ (bool)
if true, lftp will fork before resolving host address. Default is true.
.TP
.BR ftp:fxp-passive-source \ (bool)
if true, lftp will try to set up source ftp server in passive mode first,
otherwise destination one. If first attempt fails, lftp tries to set them up
the other way. If the other disposition fails too, lftp falls back to plain
copy. See also ftp:use-fxp.
.TP
.BR ftp:list-options \ (string)
sets options which are always appended to LIST command. It can be
useful to set this to `-a' if server does not show dot (hidden) files by default.
Default is empty.
.TP
.BR ftp:nop-interval \ (seconds)
delay between NOOP commands when downloading tail of a file. This is useful
for ftp servers which send "Transfer complete" message before flushing
data transfer. In such cases NOOP commands can prevent connection timeout.
.TP
.BR ftp:passive-mode \ (bool)
sets passive ftp mode. This can be useful if you are behind a firewall
or a dumb masquerading router.
.TP
.BR ftp:port-range \ (from-to)
allowed port range for active mode. 
Format is min-max, or `full' or `any' to indicate any port. Default is `full'.
.TP
.BR ftp:proxy \ (URL)
specifies ftp proxy to use.
To disable proxy set this to empty string. Note that it is an ftp proxy which
uses ftp protocol, not ftp over http. Default value is taken from environment
variable \fBftp_proxy\fP if it starts with ``ftp://''. If your ftp proxy
requires authentication, specify user name and password in the URL.
.TP
.BR ftp:rest-list \ (bool)
allow usage of REST command before LIST command. This might be useful for
large directories, but some ftp servers silently ignore REST before LIST.
.TP
.BR ftp:rest-stor \ (bool)
if false, lftp will not try to use REST before STOR. This can be useful
for some buggy servers which corrupt (fill with zeros) the file if REST followed
by STOR is used.
.TP
.BR ftp:skey-allow \ (bool)
allow sending skey/opie reply if server appears to support it. On by default.
.TP
.BR ftp:skey-force \ (bool)
do not send plain text password over the network, use skey/opie instead. If
skey/opie is not available, assume failed login. Off by default.
.TP
.BR ftp:stat-interval \ (seconds)
interval between STAT commands. Default is 1.
.TP
.BR ftp:sync-mode \ (bool)
if true, lftp will send one command at a time and wait for
response. This might be useful if you are using a buggy ftp server or
router. When it is off, lftp sends a pack of commands and waits for
responses - it speeds up operation when round trip time is significant.
Unfortunately it does not work with all ftp servers and some routers have
troubles with it, so it is on by default.
.TP
.BR ftp:use-abor \ (bool)
if false, lftp does not send ABOR command but closes data connection
immediately.
.TP
.BR ftp:use-fxp \ (bool)
if true, lftp will try to set up direct connection between two ftp servers.
.TP
.BR ftp:use-stat \ (bool)
if true, lftp sends STAT command in FXP mode transfer to know how much
data has been transferred. See also ftp:stat-interval. Default is true.
.TP
.BR ftp:verify-address \ (bool)
verify that data connection comes from the network address of control
connection peer. This can possibly prevent data connection spoofing
which can lead to data corruption. Unfortunately, this can fail
for sertain ftp servers with several network interfaces,
when they do not set outgoing address on data socket, so it is disabled by default.
.TP
.BR ftp:verify-port \ (bool)
verify that data connection has port 20 (ftp-data) on its remote end.
This can possibly prevent data connection spoofing by users of remote
host. Unfortunately, too many windows and even unix ftp servers forget
to set proper port on data connection, thus this check is off by default.
.TP
.BR ftp:web-mode \ (bool)
disconnect after closing data connection. This can be useful for totally
broken ftp servers. Default is false.
.TP
.BR hftp:cache \ (bool)
allow server/proxy side caching for ftp-over-http protocol.
.TP
.BR hftp:proxy \ (URL)
specifies http proxy for ftp-over-http protocol (hftp). The protocol hftp
cannot work without http proxy, obviously.
Default value is taken from environment
variable \fBftp_proxy\fP if it starts with ``http://'', otherwise from
environment variable \fBhttp_proxy\fP.  If your ftp proxy
requires authentication, specify user name and password in the URL.
.TP
.BR hftp:use-head \ (bool)
if set to off, lftp will try to use `GET' instead of `HEAD' for hftp protocol.
While this is slower, it may allow lftp to work with some proxies which
don't understand or mishandle ``HEAD ftp://'' requests.
.TP
.BR http:cache \ (bool)
allow server/proxy side caching.
.TP
.BR http:proxy \ (URL)
specifies http proxy. It is used when lftp works over http protocol.
Default value is taken from environment variable \fBhttp_proxy\fP.
If your ftp proxy requires authentication, specify user name and password
in the URL.
.TP
.BR http:user-agent " (string)"
the string lftp sends in User-Agent header of HTTP request.
.TP
.BR mirror:time-precision " (time interval)"
maximum time difference between files to assume they are the same. File size
is checked too.
.TP
.BR mirror:loose-time-precision " (time interval)"
same as time-precision, but applies to the case of imprecise time information.
(e.g. derived from file listing which includes only date without time)
.TP
.BR net:connection-limit \ (number)
maximum number of concurrent connections to the same site. 0 means unlimited.
.TP
.BR net:connection-takeover \ (bool)
if true, foreground connections have priority over background ones and can
interrupt background transfers to complete a foreground operation.
.TP
.BR net:idle \ (seconds)
disconnect from server after that number of idle seconds.
.TP
.BR net:limit-rate " (bytes per second)"
limit transfer rate on data connection. 0 means unlimited.
.TP
.BR net:limit-max \ (bytes)
limit accumulating of unused limit-rate. 0 means unlimited.
.TP
.BR net:limit-total-rate \ (bytes " " per " " second)
limit transfer rate of all connections in sum. 0 means unlimited.
Note that sockets have receive buffers on them, this can lead to network
link load higher than this rate limit just after transfer beginning. You
can try to set net:socket-buffer to relatively small value to avoid this.
.TP
.BR net:limit-total-max \ (bytes)
limit accumulating of unused limit-total-rate. 0 means unlimited.
.TP
.BR net:max-retries \ (number)
the maximum number of sequential retries of an operation without success.
0 means unlimited.
.TP
.BR net:no-proxy \ (string)
contains comma separated list of domains for which proxy should not be used.
Default is taken from environment variable \fBno_proxy\fP.
.TP
.BR net:reconnect-interval-base \ (seconds)
sets the base minimal time between reconnects. Actual interval depends on
net:reconnect-interval-multiplier and number of attempts to perform an
operation.
.TP
.BR net:reconnect-interval-max \ (seconds)
sets maximum reconnect interval. When current interval after multiplication
by net:reconnect-interval-multiplier reachs this value (or exceeds it), it
is reset back to net:reconnect-interval-base.
.TP
.BR net:reconnect-interval-multiplier \ (real\ number)
sets multiplier by which base interval is multiplied each time new attempt
to perform an operation fails. When the interval reachs maximum, it is reset
to base value. See net:reconnect-interval-base and net:reconnect-interval-max.
.TP
.BR net:socket-buffer \ (bytes)
use given size for SO_SNDBUF and SO_RCVBUF socket options. 0 means system
default.
.TP
.BR net:socket-maxseg \ (bytes)
use given size for TCP_MAXSEG socket option. Not all operating systems support
this option, but linux does.
.TP
.BR net:timeout \ (seconds)
sets the network protocol timeout.
.TP
.BR xfer:clobber \ (bool)
if this setting is off, get commands will not overwrite existing
files and generate an error instead. Default is on.
.TP
.BR xfer:eta-period \ (seconds)
the period over which wheighted average rate is calculated to produce ETA.
.TP
.BR xfer:eta-terse \ (bool)
show terse ETA (only high order parts). Default is true.
.TP
.BR xfer:rate-period \ (seconds)
the period over which wheighted average rate is calculated to be shown.

.PP
The name of variables can be abbreviated unless it becomes
ambiguous. The prefix before `:' can be omitted too. You can
set one variable several times for different closures, and thus
you can get a particular settings for particular state. The closure
is to be specified after variable name separated with slash `/'.
.PP
The closure for `dns:', `net:', `ftp:', `http:', `hftp:' domain variables
is currently just the host name as you specify it in the `open' command
(with some exceptions where closure is meaningless, e.g. dns:cache-size).
For some `cmd:' domain variables the closure is current URL without path.
For other variables it is not currently used. See examples in the sample
.IR lftp.conf .
.PP
Certain commands and settings take a time interval parameter. It has
the format Nx[Nx...], where N is time amount and x is time unit: d - days,
h - hours, m - minutes, s - seconds. Default unit is second. E.g. 5h30m.
Also the interval can be `infinity', `inf', `never', `forever' - it means
infinite interval. E.g. `sleep forever' or `set dns:cache-expire never'.

.SS FTP asynchronous mode
.PP
.B Lftp
can speed up ftp operations by sending several commands at once and
then checking all the responses. See ftp:sync-mode variable. Sometimes
this does not work, thus synchronous mode is the default. You can try
to turn synchronous mode off and see if it works for you. It is known
that some network software dealing with address translation works
incorrectly in the case of several FTP commands in one network packet.
.PP
RFC959 says: ``The user-process sending another command before the
completion reply would be in violation of protocol; but server-FTP
processes should queue any commands that arrive while a preceding
command is in progress''. Also, RFC1123 says: ``Implementors MUST
NOT assume any correspondence between READ boundaries on the control
connection and the Telnet EOL sequences (CR LF).'' and ``a single READ
from the control connection may include more than one FTP command''.

So it must be safe to send several commands at once, which speeds up
operation a lot and seems to work with all Unix and VMS based ftp
servers. Unfortunately, windows based servers often cannot handle
several commands in one packet, and so cannot some broken routers.

.SH OPTIONS
.TP
.B \-d
Switch on debugging mode
.TP
.BI \-e " commands"
Execute given commands and don't exit.
.TP
.BI \-p " port"
Use the given port to connect
.TP
.BI \-u " user\fR[\fP\fB,\fPpass\fR]\fP"
Use the given username and password to connect
.TP
.BI \-f " script_file"
Execute commands in the file and exit
.TP
.BI \-c " commands"
Execute the given commands and exit

.SH ENVIRONMENT VARIABLES
The following environment variables are processed by \fBlftp\fR:
.IP "\fBHOME\fP"
Used for (local) tilde (`~') expansion
.IP "\fBSHELL\fP"
Used by the \fB!\fR command to determine the shell to run.
.IP "\fBPAGER\fP"
This should be the name of the pager to use.  It's used by the
\fBmore\fR and \fBzmore\fR commands.
.IP "\fBhttp_proxy\fP"
Used to set initial http:proxy and hftp:proxy variables.
.IP "\fBftp_proxy\fP"
Used to set initial ftp:proxy or hftp:proxy variables, depending
on URL protocol used in this environment variable.
.IP "\fBno_proxy\fP"
Used to set initial net:no-proxy variable.

.SH FILES
.TP
.I "/etc/lftp.conf"
system-wide startup file. Actual location depends on \-\-sysconfdir
configure option. It is \fI/etc\fR when prefix is \fI/usr\fR,
\fI/usr/local/etc\fR by default.

.TP
.I "~/.lftp/rc," "~/.lftprc"
These files are executed on lftp startup after \fI/etc/lftp.conf\fR.
.TP
.I "~/.lftp/log"
The file things are logged to when lftp moves into the background in
nohup mode.
.TP
.I "~/.lftp/bookmarks"
The file is used to store lftp's bookmarks.  See the \fBbookmark\fR
command.
.TP
.I "~/.lftp/cwd_history"
The file is used to store old working directories for each site visited.
.TP
.I "~/.netrc"
The file is consulted to get default login and password to ftp server.
Passwords are also searched here is an URL with user name but with no
password is used.

.SH SEE ALSO
.BR ftpd "(8), " ftp (1)
.br
RFC854 (telnet),
RFC959 (ftp),
RFC1123,
RFC1945 (http/1.0),
RFC2052 (SRV RR),
RFC2068 (http/1.1),
RFC2428 (ftp/ipv6).

.SH AUTHOR
.nf
Alexander V. Lukyanov
lav@yars.free.net
.fi

.SH ACKNOWLEDGMENTS
This manual page was originally written by Christoph Lameter
<clameter@debian.org>, for the Debian GNU/Linux system.
The page was improved by Nicolas Lichtmaier <nick@Feedback.com.ar>,
James Troup <J.J.Troup@comp.brad.ac.uk> and
Alexander V. Lukyanov <lav@yars.free.net>.
